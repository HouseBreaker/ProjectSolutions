@using Solutions.Enums
@model Solutions.Models.PostViewModel

@{
    ViewBag.Title = "Edit";
}




@if (Request.IsAuthenticated)
{
    <div class="container">
        <div class="well">
            <h2>Edit Solution</h2>
            @using (Html.BeginForm("Edit", "Post", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(m => m.Title, new { @class = "control-label col-sm-4" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Link, new { @class = "control-label col-sm-4" })
                    <div class="col-sm-4">
                        @Html.TextAreaFor(m => m.Link, new { @class = "form-control", @rows = "7" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Language, new { @class = "col-sm-4 control-label" })
                    <div class="dropdown col-sm-4">
                        @Html.DropDownListFor(m => m.Language,
                            new SelectList(Model.Languages),
                            new { @class = "btn btn-info col-sm-12" })
                    </div>
                </div>

                if (User.IsInRole("Admin"))
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Verified, new { @class = "col-sm-4 control-label" })
                        <div class="dropdown col-sm-4">
                            @Html.DropDownListFor(m => m.Verify,
                            new SelectList(Model.Verified),
                            new { @class = "btn btn-info col-sm-12" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group" , hidden="hidden">
                        @Html.LabelFor(m => m.Verified, new { @class = "col-sm-4 control-label" })
                        <div class="dropdown col-sm-4">
                            @Html.DropDownListFor(m => m.Verify,
                                new SelectList(Model.Verified),
                                new { @class = "btn btn-info col-sm-12" })
                        </div>
                    </div>
                }

                @Html.HiddenFor(m => m.ChapterId);

                <div class="form-group">
                    <div class="col-sm-4 col-sm-offset-4">
                        @Html.ActionLink("Cancel", "Index", "Post", null, new { @class = "btn btn-default" })
                        <input type="submit" value="Edit" class="btn btn-success" />
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{

    <div class="container">
        <div class="well">
            <h3>You dont have rights to edit Solutions!</h3>
            <h3>Please, Register or Log on!</h3>

        </div>
    </div>
}